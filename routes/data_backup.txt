var express = require('express');

module.exports = function (app){

  var router = express.Router(),
  mongoskin = require('mongoskin');

  var db = mongoskin.db('mongodb://@localhost:27017/keeper', {safe:true})

  function getCollection(cname){
    return db.collection(cname);
  }

  /* GET success true */
  router.get('/', function(req, res) {
    res.send({success:true});
  });

  /* Generate test data */
  router.get('/gentestd', function(req, res) {
    var user = [
      {
        "email":"skumar@gmail.com",
        "firstname":"shashaank",
        "lastname":"kumar",
        "uid":"s1234x",
        "uname":"skum"
      },
      {
        "email":"scha@gmail.com",
        "firstname":"sandeep",
        "lastname":"chaudhary",
        "uid":"s3456x",
        "uname":"scha"
      }
    ];
    var note = [
      {
        "title":"This is Title",
        "text":"some selected text.",
        "tags":["test","dummy","xyz"],
        "uid":"s3456x",
        "fullurl":"http://www.google.com"
      },
      {
        "title":"This is Title x",
        "text":"some selected text. some selected text. some selected text. some selected text. some selected text.",
        "tags":["test","long","xyz"],
        "uid":"s1234x",
        "fullurl":"http://www.google.com"
      },
      {
        "title":"This is Title y",
        "text":"some selected text.",
        "tags":["test","sha"],
        "uid":"s1234x",
        "fullurl":"http://www.google.com"
      },
      {
        "title":"This is Title z",
        "text":"some selected text. some selected text. some selected text. some selected text. some selected text.",
        "tags":["test","sand","xyz"],
        "uid":"s3456x",
        "fullurl":"http://www.google.com"
      }
    ];



    getCollection('tusers').remove({},function(er){
      if(!er){
        console.log('tusers deleted');
      }
    });
    getCollection('tNote').remove({},function(er){
      if(!er){
        console.log('tNotes deleted');
      }
    });
    for(var i = 0; i<user.length; i++){
      getCollection('tusers').insert(user[i],function(er){
        if(!er){
          console.log('tusers created');
        }
      });
    }
    for(var j = 0; j<note.length; j++){
      getCollection('ttags').insert(note[j],function(er){
        if(!er){
          console.log('ttags created');
        }
      });
    }
    res.send('.....................');
  });


  router.get('/deleteall', function(req, res, next){
    console.log("Delete All");
    getCollection('note').remove({},function(er){
      if(!er){
        console.log('Note deleted');
      } else {
        console.log('Error deleting Notes');
      }
    });

    getCollection('tag').remove({},function(er){
      if(!er){
        console.log('Tag deleted');
      } else {
        console.log('Error deleting Tags');
      }
    });

    res.end();
  });

  router.get('/getTags', function(req, res, next){
    console.log("Getting tags");
    var param = {};
    param = req.body.name && req.body.name || param;
    getCollection('tag').find(param).toArray(function(er, result){
      if(!er){
        res.send(result);
      } else {
        console.log('Error fetching tags');
      }
    });

  });

  router.post('/addNote', function(req, res, next) {
    console.log("Adding a note");

    var tag = req.body.tag
        , content = req.body.cont;

    // Save Note
    var oNote = { "content": content, "tag": tag };
      getCollection("note").insert(oNote, {}, function(e, results){
        if (e) {
          return next(e);
        }
        // Add Tag
        console.log("Adding tag: "+  tag);
        getCollection("tag").insert({"name": tag}, {}, function(e, results){
          if (e) {
            return next(e);
          }
          res.send(results);
        });
      });
  });

  /* GET Collection Data */
  router.get('/:cn', function(req, res, next) {
    getCollection(req.params.cn).find({} ,{limit:0, sort: [['_id',-1]]}).toArray(function(e, results){
      if (e) {
        return next(e);
      }
      res.send(results);
    })
  });


  /* GET Collection Data by key : val*/
  router.get('/:cn/:key/:val', function(req, res, next) {
    var fobj = {};
    fobj[req.params.key] = req.params.val;
    getCollection(req.params.cn).find(fobj ,{limit:0, sort: [['_id',-1]]}).toArray(function(e, results){
      if (e) {
        return next(e);
      }
      res.send(results);
    })
  });

  /* Update Collection Data */
  router.put('/:cn/:key/:val', function(req, res, next) {
    var query = {};

    query[req.params.key] = req.params.val

    getCollection(req.params.cn).update(req.params.id, {$set:req.body}, {safe:true, multi:false}, function(e, result){
      if (e) {
        return next(e);
      }
      res.send((result===1)?{success:true}:{success:false});
    });
  });

  /* Delete Collection Data */

  router.delete('/:cn/:key/:val', function(req, res, next) {
    var query = {};

    query[req.params.key] = req.params.val

    req.collection.remove(query, function(e, result){
      if (e) {
        return next(e);
      }
      res.send((result===1)?{success:true}:{success:false});
    })
  })


  return router;

};
